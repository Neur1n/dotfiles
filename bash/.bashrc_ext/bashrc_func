# vim: ft=sh

# Show mode
function show_mode
{
  MODE=`bind -v | awk '/keymap/ {print $NF}'`
  if [ "${MODE}" == 'vi-insert' ]; then
    echo -ne "I"
  else
    echo -ne "N"
  fi
}

#****************************************************************** {Git Prompt
# Get current branch in git repo
function parse_git_branch
{
  BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
  if [ ! "${BRANCH}" == "" ]
  then
    STAT=`parse_git_dirty`
    echo "<${BRANCH}${STAT}>"
  else
    echo ""
  fi
}

# Get current status of git repo
function parse_git_dirty
{
  status=`git status 2>&1 | tee`
  dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
  untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
  ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
  newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
  renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
  deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
  bits=''
  if [ "${renamed}" == "0" ]; then
    bits=">${bits}"
  fi
  if [ "${ahead}" == "0" ]; then
    bits="*${bits}"
  fi
  if [ "${newfile}" == "0" ]; then
    bits="+${bits}"
  fi
  if [ "${untracked}" == "0" ]; then
    bits="?${bits}"
  fi
  if [ "${deleted}" == "0" ]; then
    bits="x${bits}"
  fi
  if [ "${dirty}" == "0" ]; then
    bits="!${bits}"
  fi
  if [ ! "${bits}" == "" ]; then
    echo " ${bits}"
  else
    echo ""
  fi
}
# }

#**************************************************************** {Proxy Toggle
function toggle_proxy
{
  state=$(gsettings get org.gnome.system.proxy mode)

  if [ $state == "'none'" ]; then
    gsettings set org.gnome.system.proxy mode 'auto'
    gsettings set org.gnome.system.proxy autoconfig-url 'file:///home/yy/Downloads/autoproxy.pac'
    echo 'Automatic mode on.'
  elif [ $state == "'auto'" ]; then
    gsettings set org.gnome.system.proxy mode 'none'
    echo 'Automatic mode off.'
  fi
}

export -f toggle_proxy
# }

#********************************************** {Terminal Profile Export/Import
# Credit: https://github.com/yktoo/yktools/blob/master/gnome-terminal-profile
function term_prof
{
  if [ "$1" == "-h" -o "--help" ]; then
    echo "Usage: $0 import|export <filename>"
  fi

    # Check variables
    mode="$1"
    filename="$2"
    [[ -z "$mode"     ]] && echo "No mode specified"
    [[ -z "$filename" ]] && echo "No filename specified"

    # Get default profile ID
    profile="$(gsettings get org.gnome.Terminal.ProfilesList default)"
    profile="${profile:1:-1}" # remove leading and trailing single quotes

    case "$mode" in
      # Export profile
      export)
      dconf dump "/org/gnome/terminal/legacy/profiles:/:$profile/" > "$filename"
      echo "Saved the default profile ${CLR_VAR}${profile}${CLR_OFF} in ${CLR_VAR}${filename}${CLR_OFF}"
      ;;

        # Import profile
        import)
        [[ ! -r "$filename" ]] && err "Failed to read from file $filename"
        dconf load "/org/gnome/terminal/legacy/profiles:/:$profile/" < "$filename"
        echo "Loaded ${CLR_VAR}${filename}${CLR_OFF} into the default profile ${CLR_VAR}${profile}${CLR_OFF}"
        ;;

      *)
        echo "Incorrect mode: $mode"
        ;;
    esac
  }

export -f term_prof
# }
